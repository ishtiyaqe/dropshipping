"""
Django settings for quicks project.

Generated by 'django-admin startproject' using Django 4.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)
from pathlib import Path
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z+8oi&p23c72-0&_zhu&_g+s#ix1zod)y)w3gncr&t_bz&#w4u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True



# Application definition

INSTALLED_APPS = [
    'theme',
    'accounts',
    'chatbot_app',
    'react',
    'admin_tools_stats',
    'django_nvd3',
    'rest_framework',
    'charts',
    'chartjs',
    'jazzmin',
    'colorfield',
    'modelcluster',
    'taggit',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'store',
    'order',
    'widget_tweaks',
    'tailwind',
    'crispy_forms',
    'crispy_tailwind', 
    'snipet',
    'django.contrib.sites',
    'django_filters',
    'graphene_django',
    'corsheaders',
    'rest_framework.authtoken',
    'ckeditor',
    'djangobower'
]

ckeditor__external_plugin_resources = [
    (
        "youtube",
        "/static/ckeditor/ckeditor/plugins/youtube/",
        "plugin.min.js",
    )
]

# BOWER_COMPONENTS_ROOT = os.path.join(PROJECT_DIR, 'components')
# STATICFILES_FINDERS = (
#     'djangobower.finders.BowerFinder',
# )

# BOWER_INSTALLED_APPS = (
#     'jquery#3.4.1',
#     'jquery-ui#1.12.1',
#     'd3#3.3.13',
#     'nvd3#1.7.1',
# )

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'CMS',
        'special': {
            'toolbar': 'Special',
            'toolbar_Special': [
                ['Bold', 'CodeSnippet', 'Youtube'],
            ],
            'extraPlugins': ["codesnippet", "Youtube"],
            'height': 400,
            'width': '100%',
            'allowedContent': True,
            'uiColor': '#f0f0f0',
            'autoGrow_maxHeight': 800,
            'autoGrow_minHeight': 400,
            'removePlugins': 'resize',
            'removeButtons': None,
        },
    },
}


GRAPHENE = {
    "SCHEMA": "store.schema.schema"
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Add this line before CommonMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'store.middleware.CartMiddleware',
    'order.middleware.walletMiddleware',
]

ROOT_URLCONF = 'quicks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
               os.path.join(PROJECT_DIR, "templates"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                
            ],
        },
    },
]

WSGI_APPLICATION = 'quicks.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     'default': {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": "ecargocom_1",
#         "HOST": "localhost",
#         "USER": "ecargocom_root",
#         "PASSWORD": "missYou2@#",
#         "PORT": "3306",
#         "OPTIONS" : {
#             "init_command":"SET sql_mode='STRICT_TRANS_TABLES'"
#         },
#         "TIME_ZONE": "Asia/Dhaka",
#     }
# }






# DATABASES = {
#     'default': {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": "admin_3",
#         "HOST": "localhost",
#         "USER": "admin_root",
#         "PASSWORD": "aC(yOMRLhELU",
#         "PORT": "3306"
#     }
# }

SITE_ID = 1
# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Dhaka'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(PROJECT_DIR, "static")

MEDIA_ROOT = "/home/admin/public_html/media"
MEDIA_URL = "/media/"
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


ACCOUNT_FORMS = {
'signup': 'order.forms.CustomSignupForm',
}


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
}

TAILWIND_APP_NAME = "theme"
INTERNAL_IPS = [
    "127.0.0.1",
]
NPM_BIN_PATH = "C:/Program Files/nodejs/npm.cmd"

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"

CRISPY_TEMPLATE_PACK = "tailwind"


JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Ecargo Admin",

    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Ecargo",

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "Ecargo",

    # Logo to use for your site, must be present in static files, used for brand on top left
    "site_logo": "images/ecargo_icon.png",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "images/ecargo_icon.png",

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": "images/ecargo_icon.png",

    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle",

   

    # Welcome text on the login screen
    "welcome_sign": "Welcome to the Ecargo.com.bd",

    # Copyright on the footer
    "copyright": "Ecargo.Com.BD",

    # The model admin to search from the search bar, search bar omitted if excluded
    # "search_model": "auth.User",

    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
    "user_avatar": "fas fa-user text-blue",

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Home",  "url": "admin:index", "permissions": ["auth.view_user"]},


        # model admin to link to (Permissions checked against model)
        {"model": "auth.User"},

        # App with dropdown menu to all its models pages (Permissions checked against models)
        {"app": "order"},
        {"app": "store"},
    ],

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ("app" url type is not allowed)
    "usermenu_links": [
        {"model": "auth.user"}
    ],

    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    "show_sidebar": True,

    # Whether to aut expand the menu
    "navigation_expanded": False,

    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": [],

    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": ['order.orderss','order.sticket','order.smst','store.categoryhome','store.req',],

    # # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    # "order_with_respect_to": [
        
    #     ],

    # Custom links to append to app groups, keyed on app name


    # Order the auth app before the books app, other apps will be alphabetically placed after these
    "order_with_respect_to": ["auth", "order", "store", 
        "snipet.shipformedes","snipet.shipformenote",
        "snipet.payformenote","snipet.reqsnote","snipet.Home_Banneer","snipet.terms_condition_page","snipet.forbidenitempagen_page",
        "snipet.Privacy_Policy_page","snipet.Shipping_refund_Pollicy_page","snipet.Home_Faq","snipet.Faq_page","snipet.shipformecharge","snipet.shipformemesssages",],

    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
    # for the full list of 5.13.0 free icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "order.OrerPrduct": "fas fa fa-gift",
        "store.Product": "fas fa fa-gift",
        "order.wallet": "fas fa-folder ",
        "account.EmailAddress": "fas fa fa-envelope ",
        "sites.site": "fas fa fa-globe ",
        "store.shipping": "fas fa fa-truck ",
        "store.payforme": "fas fa fa-address-card",
        "socialaccount.socialaccount": "fas fa fa-users ",
        "socialaccount.socialtoken": "fas fa-user-plus ",
        "socialaccount.socialapp": "fas fa-user-plus ",
        "taggit.tag": "fas fa fa-tags ",
        "snipet.shipformedes": "fas fa fa-leaf",
        "snipet.shipformenote": "fas fa fa-leaf",
        "snipet.payformenote": "fas fa fa-leaf",
        "snipet.Home_Banneer": "fas fa fa-leaf",
        "snipet.terms_condition_page": "fas fa fa-leaf",
        "snipet.forbidenitempagen_page": "fas fa fa-leaf",
        "snipet.Privacy_Policy_page": "fas fa fa-leaf",
        "snipet.Shipping_refund_Pollicy_page": "fas fa fa-leaf",
        "snipet.Home_Faq": "fas fa fa-leaf",
        "snipet.Faq_page": "fas fa fa-leaf",
        "snipet.shipformecharge": "fas fa fa-leaf",
        "snipet.shipformemesssages": "fas fa fa-leaf",
        "snipet.shipformemesssages": "fas fa fa-leaf",
        "snipet.reqsnote": "fas fa fa-leaf",
        
    },
    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": False,

    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": "css/admin/custom.css",
    "custom_js": "js/admin/custom.js",
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "horizontal_tabs",
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},

}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": True,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-navy",
    "accent": "accent-teal",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-orange",
    "sidebar_nav_small_text": True,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "darkly",
    "dark_mode_theme": "darkly",
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "actions_sticky_top": True
}

# JAZZMIN_SETTINGS["show_ui_builder"] = True


# from django.utils.translation import gettext_lazy as _
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# EMAIL_HOST = 'mail.Ecargo.com'
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 'support@cargo.com'
# EMAIL_HOST_PASSWORD = 'MissYou2@#'
# DEFAULT_FROM_EMAIL = "support@cargo.com"


# settings.py

# Define the session engine as 'django.contrib.sessions.backends.signed_cookies'
SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'

# Define a session cookie name
SESSION_COOKIE_NAME = 'localhost'  # You can choose your own name

# Define the session cookie domain (e.g., 'localhost' for development)
SESSION_COOKIE_DOMAIN = 'localhost'  # Update this to your domain in a production environment

# Set the session age (timeout) in seconds
SESSION_COOKIE_AGE = 3600  # Set it to your desired session timeout

# Ensure the CSRF cookie is set to use the same domain
CSRF_COOKIE_DOMAIN = 'localhost'  # Update this to your domain in a production environment

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Add the actual origin of your frontend application
    "http://localhost:8080",  # Add the actual origin of your frontend application
    "http://192.168.0.104",  # Add the actual origin of your frontend application
    "http://192.168.0.104:8080",
    "http://192.168.0.109:8080",
    "http://192.168.0.105:8080",
]
CSRF_TRUSTED_ORIGINS = [
  'http://localhost:8080',
  'http://192.168.0.109:8080',
  'http://192.168.0.105:8080',
  'http://192.168.0.104:8080',
]
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]
CORS_ALLOW_CREDENTIALS = True

ALLOWED_HOSTS = ["localhost","127.0.0.1","127.0.0.2","192.168.0.104","192.168.0.102","192.168.0.104","192.168.0.103","192.168.0.109",]